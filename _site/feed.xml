<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2019-06-25T13:50:23+05:30</updated><id>http://localhost:4000/blog/feed.xml</id><title type="html">Yash Kumar Verma</title><subtitle>My Experiments with &lt; / &gt;</subtitle><entry><title type="html">C v/s Python - Part 1</title><link href="http://localhost:4000/blog/C-vs-Python-Part-1/" rel="alternate" type="text/html" title="C v/s Python - Part 1" /><published>2019-06-25T00:00:00+05:30</published><updated>2019-06-25T00:00:00+05:30</updated><id>http://localhost:4000/blog/C%20vs-Python%20:%20-Part-1</id><content type="html" xml:base="http://localhost:4000/blog/C-vs-Python-Part-1/">&lt;p&gt;This blog post will directly compare programs written in C and Python to perform the same task.&lt;/p&gt;

&lt;p&gt;Hello again. C has been one of the &lt;strong&gt;ancient&lt;/strong&gt; languages in computer sciences and Python is the new funky kid out there, who’s into almost everything. This post will directly compare the programs written in C and Python for the same task. So let’s get to work.&lt;/p&gt;

&lt;p&gt;The following programs are from the Book, “&lt;strong&gt;&lt;em&gt;Let Us C, by Yashavant Kanetkar&lt;/em&gt;&lt;/strong&gt;”, but modified a bit to increase the complexity. For example, removing the limit on length on input, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter2&lt;/strong&gt;/Problem1: Write a program to calculate the sum of digits
&lt;script src=&quot;https://gist.github.com/YashKumarVerma/e3baa45b64c43259afd6b3dc73202548.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The following comparisons show that equivalent python programs are smaller as compared to their C counterparts. This feature is helpful for a lot of practical day programming but has a single drawback. This will be discussed in further posts. At last, have a look at this transformation. It would be unjust to call it small… it’s nothing!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter2&lt;/strong&gt;/Problem2: Write a program to reverse the given number
&lt;script src=&quot;https://gist.github.com/YashKumarVerma/bfd7d05c9fddc15af2773bb738db3720.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Thanks for your time. Happy coding.&lt;/p&gt;</content><author><name></name></author><summary type="html">This blog post will directly compare programs written in C and Python to perform the same task.</summary></entry><entry><title type="html">The concept of Blazing</title><link href="http://localhost:4000/blog/The-Idea-of-Blazing/" rel="alternate" type="text/html" title="The concept of Blazing" /><published>2019-06-18T00:00:00+05:30</published><updated>2019-06-18T00:00:00+05:30</updated><id>http://localhost:4000/blog/The-Idea-of-Blazing</id><content type="html" xml:base="http://localhost:4000/blog/The-Idea-of-Blazing/">&lt;p&gt;PHP, since it’s birth in 1994, has been the first choice of entrants for backend applications. Since it’s inception it has been readily supported by frameworks. With time the language evolved to become a dynamic server-side scripting language with an enormous set of features.&lt;/p&gt;

&lt;p&gt;The extent of the language is continuously rising. for instance, take the example of Facebook (Initially knows as The Facebook), The biggest, most successful and invariably, the most complex social network is built using php.&lt;/p&gt;

&lt;p&gt;Back in 2015 when I was discovering new stuff in computers and trying new languages by copy-pasting code, I had my encounter with PHP. I honestly loved it!  Since then PHP has been my core backend language, along with nodeJs for some distinct projects. Steadily as I got through the basics of PHP, I heard a captivating name &lt;strong&gt;codeigniter&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;“CodeIgniter is a php MVC framework” I read. Now there is a strange fascination about this phrase. it’s an MVC framework. I dug deeper into the documentation and Wikia, &lt;em&gt;only to know that I knew nothing&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Fast forward 2 years. Now I came to know about Laravel. Another MVC framework. I determined to get my hands into it. With all my dedication, I ventured, hard enough, got stuck too often and failed. The main concern is learning any new framework is the learning curvature. Which sometimes is too steep. Beginners should be acquainted with frameworks which are powerful, but at the same time, should have an association with the low lying apples of the language.&lt;/p&gt;

&lt;p&gt;Laravel is a magnificently written framework, but for a beginner, it’s quite difficult to follow (namespaces, class definitions and what not!). So I thought of a framework which would follow the MVC concept, be quick, have a variety of functions, easy to use and more importantly, powerful.&lt;/p&gt;

&lt;p&gt;Then, Blazing was Born.&lt;/p&gt;</content><author><name></name></author><summary type="html">PHP, since it’s birth in 1994, has been the first choice of entrants for backend applications. Since it’s inception it has been readily supported by frameworks. With time the language evolved to become a dynamic server-side scripting language with an enormous set of features.</summary></entry><entry><title type="html">Hello World ! TaDa !</title><link href="http://localhost:4000/blog/Hello-World/" rel="alternate" type="text/html" title="Hello World ! TaDa !" /><published>2019-06-16T00:00:00+05:30</published><updated>2019-06-16T00:00:00+05:30</updated><id>http://localhost:4000/blog/Hello-World</id><content type="html" xml:base="http://localhost:4000/blog/Hello-World/">&lt;p&gt;It’s going to be a long journey. So hang in tight, and enjoy the ride.&lt;/p&gt;

&lt;p&gt;This blog will be my journal for the next couple of years, and would house majority of my writings about technology. I’ve decided not to use my own blog generator (will discuss more about it someday) because I want to know more about the features that it should have. Using github pages along with jekyll will surely serve the purpose.&lt;/p&gt;

&lt;p&gt;Hope you guys will enjoy the journey.&lt;/p&gt;</content><author><name></name></author><summary type="html">It’s going to be a long journey. So hang in tight, and enjoy the ride.</summary></entry></feed>